!function(e,t){for(var n in t)e[n]=t[n]}(exports,function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=20)}([function(e,t){e.exports=require("vscode")},function(e,t){e.exports=require("util")},function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isWindows="win32"===process.platform},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(2),r=n(11),s=n(3),i=n(23),a=n(1),c=n(0),l=n(25),u=n(26),d=n(4),m=a.promisify(o.readFile),h=a.promisify(o.writeFile),p=a.promisify(o.exists),f=a.promisify(o.chmod),g="remote.SSH.configFile";function w(){return c.workspace.getConfiguration().get(g)}t.sshConfigurationFileFromSetting=w;const y=s.resolve(r.userInfo().homedir,".ssh/config"),v=d.isWindows?"C:\\ProgramData\\ssh\\ssh_config":"/etc/ssh/ssh_config";function S(){return[y,v]}function $(){const e=w();return e?[e]:S()}function C(e){const t=Object.create(null);return e.filter(x).forEach(e=>{e.config.filter(b).filter(e=>e.param&&"HostName"===e.param&&e.value).forEach(n=>{R(e.value).forEach(e=>t[e]=n.value)})}),t}async function E(e,t){for(let n of t){const t=(await _(n)).compute(e.hostName);if(t&&t.HostName)return t.IdentityFile&&(t.IdentityFile=t.IdentityFile.map(e=>u.untildify(e))),t}return null}async function _(e){const t=await async function(e){if(await p(e)){const t=await m(e);return t.toString("utf8")}return""}(e);return function(e){function t(e){e.param=H.get(e.param.toLowerCase())||e.param}return e.filter(b).forEach(e=>{t(e),x(e)&&e.config.filter(b).forEach(t)}),e}(i.parse(t))}function b(e){return 1===e.type}function x(e){return b(e)&&"Host"===e.param&&!!e.value&&!!e.config}t.defaultSshConfigurationFiles=S,t.getSshConfigurationFiles=$,t.getConfiguredSshHosts=async function(){const e=[];for(let t of $()){const n=await _(t);e.push(...T(n))}return e},t.getConfiguredSshHostNames=async function(){const e={};for(let t of $()){const n=C(await _(t));Object.keys(n).forEach(t=>e[t]=n[t])}return e},t.getConfigurationForHost=async function(e){return E(e,await $())},t._getConfigurationForHost=E;const H=new Map([["host","Host"],["hostname","HostName"],["identityfile","IdentityFile"],["user","User"],["port","Port"],["connecttimeout","ConnectTimeout"],["remotecommand","RemoteCommand"]]);function T(e){const t=new Set;return e.filter(x).forEach(e=>{R(e.value).forEach(e=>t.add(e))}),Array.from(t.keys())}function R(e){return(Array.isArray(e)?e:[e]).filter(e=>!function(e){return!!e.match(/[?*]/)}(e))}const O=new c.EventEmitter,A=O.event;t.onDidChangeSshConfiguration=A,c.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration(g)&&O.fire()});class k{constructor(e){this.logger=e,this.fileBeingWatched=new Set}startWatching(e){this.logger.trace(`ConfigFileWatcher: start watching ${e.toString()}`),this.fileBeingWatched.add(e.toString()),this.saveListener||(this.logger.trace("ConfigFileWatcher: adding save listener"),this.saveListener=c.workspace.onDidSaveTextDocument(e=>this.documentSaved(e))),this.closeListener||(this.logger.trace("ConfigFileWatcher: adding close listener"),this.closeListener=c.workspace.onDidCloseTextDocument(e=>this.documentClosed(e)))}stopWatching(e){this.logger.trace(`ConfigFileWatcher: stop watching ${e.toString()}`),this.fileBeingWatched.delete(e.toString()),0===this.fileBeingWatched.size&&(this.saveListener&&(this.logger.trace("ConfigFileWatcher: removing save listener"),this.saveListener.dispose(),this.saveListener=void 0),this.closeListener&&(this.logger.trace("ConfigFileWatcher: removing close listener"),this.closeListener.dispose(),this.closeListener=void 0))}documentSaved(e){this.logger.trace(`ConfigFileWatcher: saving ${e.uri}`),this.fileBeingWatched.has(e.uri.toString())&&(this.logger.trace(`ConfigFileWatcher: firing change event for ${e.uri}`),O.fire())}documentClosed(e){this.logger.trace(`ConfigFileWatcher: closing ${e.uri}`),this.fileBeingWatched.has(e.uri.toString())&&this.stopWatching(e.uri)}}let N;t.configureSshHosts=async function(e){const t=w(),o=await l.pickSshConfigurationFile(t||S());if(o)if("command"===o.type)"help"===o.id?c.env.openExternal(c.Uri.parse("https://aka.ms/vscode-remote/ssh/config-file")):"settings"===o.id&&async function(){const{name:e,publisher:t,extensionPack:o}=n(6),r=[`${t}.${e}`];o&&o.forEach(e=>r.push(e)),await c.commands.executeCommand("workbench.action.openSettings",`@ext:${r.join(",")} config file`)}();else if("file"===o.type){const t=o.path;if(t){const n=c.Uri.file(t);N||(N=new k(e)),N.startWatching(n),await p(t)?await c.commands.executeCommand("vscode.open",n):await async function(e){const t=s.dirname(e);await p(t)||(await u.mkdirp(t),d.isWindows||e!==y||await f(t,448)),await h(e,""),d.isWindows||e!==y||await f(e,384);const n=await c.window.showTextDocument(c.Uri.file(e));await n.insertSnippet(new c.SnippetString("# Read more about SSH config files: https://linux.die.net/man/5/ssh_config\nHost ${1:alias}\n    HostName ${2:hostname}\n    User ${3:user}"))}(t)}}}},function(e){e.exports={name:"remote-ssh",displayName:"Remote - SSH",description:"Open any folder on a remote machine using SSH and take advantage of VS Code's full feature set.",version:"0.44.2",preview:!0,publisher:"ms-vscode-remote",icon:"resources/remote-ssh.png",repository:{type:"git",url:"https://github.com/Microsoft/vscode-remote-release.git"},bugs:{url:"https://github.com/Microsoft/vscode-remote-release/issues"},license:"SEE LICENSE IN LICENSE.txt",engines:{vscode:"^1.36.0"},extensionKind:"ui",extensionPack:["ms-vscode-remote.remote-ssh-explorer","ms-vscode-remote.remote-ssh-edit"],categories:["Other"],keywords:["remote development","remote","ssh"],activationEvents:["onCommand:opensshremotes.openEmptyWindow","onCommand:opensshremotes.openEmptyWindowInCurrentWindow","onCommand:opensshremotes.openConfigFile","onCommand:opensshremotes.manageTunnel","onCommand:opensshremotes.closeTunnel","onCommand:opensshremotes.cleanDevBox","onCommand:opensshremotes.cleanRemoteServer","onCommand:opensshremotes.getHelp","onCommand:opensshremotes.getStarted","onCommand:opensshremotes.reportIssue","onCommand:opensshremotes.settings","onCommand:opensshremotes.provideFeedback","onCommand:opensshremotes.showLog","onResolveRemoteAuthority:ssh-remote"],main:"./out/extension",enableProposedApi:!0,contributes:{configuration:{title:"Remote - SSH",properties:{"remote.SSH.configFile":{type:"string",description:"The absolute file path to a custom SSH config file",default:""},"remote.SSH.showLoginTerminal":{type:"boolean",description:"Always reveal the SSH login terminal",default:!1},"remote.SSH.defaultExtensions":{type:"array",description:"List of extensions that should be installed automatically on all SSH hosts"},"remote.SSH.path":{type:"string",description:'An absolute path to the SSH executable. When empty, it will use "ssh" on the path or in common install locations',default:"",scope:"application"}}},commands:[{command:"opensshremotes.openEmptyWindow",title:"Connect to Host...",category:"Remote-SSH"},{command:"opensshremotes.openEmptyWindowOnCurrentHost",title:"New Window on Active Host",category:"Remote-SSH"},{command:"opensshremotes.openEmptyWindowInCurrentWindow",title:"Connect Current Window to Host...",category:"Remote-SSH"},{command:"opensshremotes.openConfigFile",title:"Open Configuration File...",category:"Remote-SSH"},{command:"opensshremotes.manageTunnel",title:"Forward Port from Active Host...",category:"Remote-SSH"},{command:"opensshremotes.closeTunnel",title:"Stop Forwarding Port from Active Host...",category:"Remote-SSH"},{command:"opensshremotes.cleanDevBox",title:"Uninstall VS Code Server from Host...",category:"Remote-SSH"},{command:"opensshremotes.cleanRemoteServer",title:"Kill VS Code Server on Host...",category:"Remote-SSH"},{command:"opensshremotes.getHelp",title:"Help",category:"Remote-SSH"},{command:"opensshremotes.getStarted",title:"Getting Started",category:"Remote-SSH"},{command:"opensshremotes.reportIssue",title:"Report Issue...",category:"Remote-SSH"},{command:"opensshremotes.settings",title:"Settings",category:"Remote-SSH"},{command:"opensshremotes.provideFeedback",title:"Provide Feedback",category:"Remote-SSH"},{command:"opensshremotes.showLog",title:"Show Log",category:"Remote-SSH"}],resourceLabelFormatters:[{scheme:"vscode-remote",authority:"ssh-remote+*",formatting:{label:"${path}",separator:"/",tildify:!0,workspaceSuffix:"SSH"}}],menus:{"statusBar/windowIndicator":[{command:"opensshremotes.openEmptyWindow",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@1"},{command:"opensshremotes.openConfigFile",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@2"},{command:"opensshremotes.manageTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@3"},{command:"opensshremotes.closeTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@4"},{command:"opensshremotes.showLog",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"1_remote_ssh_general@5"},{command:"opensshremotes.settings",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@1"},{command:"opensshremotes.reportIssue",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@2"},{command:"opensshremotes.provideFeedback",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@3"},{command:"opensshremotes.getHelp",when:"remoteAuthority =~ /^ssh-remote\\+.*$/",group:"9_remote_ssh_help@4"},{command:"opensshremotes.openEmptyWindow",when:"!remoteAuthority",group:"1_local_ssh@1"},{command:"opensshremotes.openConfigFile",when:"!remoteAuthority",group:"1_local_ssh@2"},{command:"opensshremotes.getStarted",when:"!remoteAuthority",group:"1_local_ssh@3"}],commandPalette:[{command:"opensshremotes.getStarted",when:"false"},{command:"opensshremotes.openEmptyWindowOnCurrentHost",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"},{command:"opensshremotes.manageTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"},{command:"opensshremotes.closeTunnel",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"},{command:"opensshremotes.provideFeedback",when:"remoteAuthority =~ /^ssh-remote\\+.*$/"}]}},scripts:{"vscode:prepublish":"webpack --mode production",compile:"webpack --mode none",watch:"webpack --mode none --watch",watch2:"tsc -w -p .",package:"vsce package --yarn",lint:"tslint -p .",pretest:"tsc -p . --outDir out-test",test:"node ./out-test/test/runTests.js"},devDependencies:{"@types/mocha":"^5.2.6","@types/node":"^10.12.26","@types/sinon":"^7.0.11","@types/vscode":"^1.36.0","@types/webpack":"^4.4.27","copy-webpack-plugin":"^5.0.2","mocha-junit-reporter":"^1.21.0","mocha-multi-reporters":"^1.1.7",sinon:"^7.3.1","ts-loader":"^5.3.3",tslint:"^5.15.0","tslint-webpack-plugin":"^2.0.4",typescript:"^3.4.2",vsce:"^1.59.0","vscode-nls-dev":"^3.2.6","vscode-test":"^0.3.5",webpack:"^4.29.6","webpack-cli":"^3.3.0"},dependencies:{"ssh-config":"^2.0.0-alpha.3"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.handleFingerprint=async function(e,t,n){const o=/fingerprint\sis\s(.+)\./,r={postAction:"keep"},s=e.trim().split("\n");if(s.length>=3&&s[s.length-1].indexOf("Are you sure you want to continue connecting")>=0){let i=s.length-1;for(;--i>=0&&!s[s.length-1].search(o););if(i>=0){r.postAction="consume";const a=o.exec(s[i]),c=await n(t.hostName,a?a[1]:e);c?r.response=c:r.canceled=!0}}else 1!==s.length||0!==s[0].indexOf("Warning: Permanently added")&&0!==s[0].indexOf("yes")&&0!==s[0].indexOf("no")||(r.postAction="consume");return r},t.handlePassphrase=async function(e,t){const n={postAction:"keep"},o=e.trim().split("\n");if(o.some(e=>e.indexOf("Enter passphrase for")>=0)){n.postAction="consume";const e=await t();e?(n.response=e,n.isPassword=!0):n.canceled=!0}else o.some(e=>e.indexOf("Identity added:")>=0)&&(n.postAction="consume");return n},t.getExitCode=function(e,t){const n=new RegExp(`${t}##([0-9]*)##`).exec(e);if(n)try{const e=parseInt(n[1]);return Number.isNaN(e)?void 0:e}catch(e){return}return 0},t.handlePassword=async function(e,t){const n={postAction:"keep"},o=function(e){if(e.includes("Password:"))return"";const t=e.split(/\n/);for(let e of t){const t=e.match(/^(.*)'s password:/);if(t)return t[1]}}(e);if("string"==typeof o){n.postAction="consume";const e=await t(o);e?(n.response=e,n.isPassword=!0):n.canceled=!0}return n},t.handle2FA=async function(e,t){const n={postAction:"keep"};if(e.includes("Verification code:")){n.postAction="consume";const e=await t();e?(n.response=e,n.isPassword=!0):n.canceled=!0}return n},t.getInteractorForMsg=function(e){let t;const n=new Promise(e=>{t=e});return{interactor:new class{async onData(n){return n.includes(e)?(t(),{postAction:"consume"}):{}}},result:n}};t.ComposedInteractor=class{constructor(e){this.interactorFactories=e}async onData(e){for(const t of this.interactorFactories){const n=await t().onData(e);if("consume"===n.postAction)return n}return{postAction:"keep"}}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(7),s=n(5),i=n(14),a=n(4),c=n(16),l=n(30),u=n(31);function d(e){return h(e?`Enter password for ${e}`:"Enter password")}function m(){return h("Enter verification code")}async function h(e){return new Promise((t,n)=>{const r=o.window.createInputBox();r.title=e,r.password=!0,r.ignoreFocusOut=!0;let s=!1;r.onDidAccept(()=>{s=!0;const e=r.value;r.dispose(),t(e)}),r.onDidHide(()=>{s||t(void 0)}),r.show()})}class p{constructor(e,t){this.label=e,this.value=t,this.isCloseAffordance=!0,this.title=e}}async function f(e,t){return new Promise((n,r)=>{const s=o.window.createQuickPick();s.canSelectMany=!1,s.items=[new p("Continue","yes"),new p("Cancel","no")],s.title=`"${e}" has fingerprint "${t}".`;let i=!1;s.onDidAccept(async()=>{i=!0;const e=s.selectedItems[0].value;s.dispose(),n(e)}),s.onDidHide(()=>{i||n()}),s.show()})}function g(e){const t=[];let{systemInteractor:n,command:r,interactor:s,nickname:i,logger:u,token:d}=e;return new Promise(async(m,h)=>{let p,f,g,y,v,S="";function $(){f&&(f.dispose(),f=void 0),g&&(g.dispose(),g=void 0),p&&(p.dispose(),p=void 0),y&&(clearInterval(y),y=void 0),v&&v.dispose(),l.dispose(t)}function C(e=!1){$(),u.debug(`"${i}" terminal command ${e?"canceled":"done"}`);const t=e?"":c.lastNonemptyLine(S);m(t||"")}d&&(v=d.onCancellationRequested(()=>{C(!0)}));try{let c;c=e.sendText?"":a.isWindows?`/c (${r}) & exit /b 0`:["-c",r+"\nexit 0"];const l=o.workspace.getConfiguration().get("remote.SSH.showLoginTerminal"),d={cwd:a.isWindows?o.Uri.file(process.env.USERPROFILE||"c:\\"):o.Uri.file(process.env.HOME||"/"),name:i,shellPath:a.isWindows?"cmd.exe":await w(),shellArgs:c,hideFromUser:!0};if(g=n.createTerminal(d),e.revealTerminal&&t.push(e.revealTerminal(()=>{g&&g.show()})),e.sendText){const t=a.isWindows?`(${e.sendText}) & exit /b 0`:e.sendText+"\nexit 0";g.sendText(t),u.trace(`"${i}" wrote data to terminal: "${e.sendText}"`)}l&&g.show(),p=n.onDidCloseTerminal(e=>{e===g&&(g=void 0,C())}),f=g.onDidWriteData(async e=>{if(y&&(clearInterval(y),y=void 0),function(e,t,n){const r=e.replace(/\r?\n$/,"");if(o.env.logLevel===o.LogLevel.Trace)n.trace(`"${t}" terminal received data: "${r}"`);else{const e=r.split(/\n/).map(e=>`> ${e}`).join("\n");n.trace(e)}}(e,i,u),S+=e,s){const e=await s.onData(S);if("consume"===e.postAction&&(S=""),e.canceled)return void C(!0);if(e.response){g.sendText(`${e.response}\n`);const t=e.isPassword?e.response.replace(/./g,"*"):e.response;u.trace(`"${i}" wrote data to terminal: "${t}"`)}}})}catch(e){!function(e){$(),u.error(`"${i}" process failed: ${e}`),h(e)}(e)}})}async function w(){return await u.exists("/bin/sh")?"/bin/sh":"sh"}t.showHostKeyConfirmation=f,t.runSshTerminalCommandWithLogin=async function(e){let t;const n=async e=>t=await function(e){return h(`Enter passphrase for ssh key ${e?`"${e}"`:""}`)}(e);let a=[];o.workspace.getConfiguration().get("remote.SSH.showLoginTerminal")||a.push(()=>({onData:t=>r.handleFingerprint(t,e.host,f)}),()=>({onData:e=>r.handlePassphrase(e,n)}),()=>({onData:e=>r.handlePassword(e,d)}),()=>({onData:e=>r.handle2FA(e,m)})),e.interactor&&a.push(()=>e.interactor);const c=await g({systemInteractor:e.systemInteractor,command:e.command,interactor:new r.ComposedInteractor(a),nickname:e.nickname,logger:e.logger,token:e.token,revealTerminal:e.revealTerminal});if(t){e.logger.trace("User entered passphrase");const n=await s.getConfigurationForHost(e.host);e.logger.trace("Passphrase was entered and ssh config entry was found - adding SSH key to agent");const o=n&&n.IdentityFile&&n.IdentityFile[0]||void 0;await i.addKeyToSshAgent(o,async()=>t,e.logger)}return c},t.runInteractiveSshTerminalCommand=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);t.defaultSystemInteractor={createTerminal:o.window.createTerminal,onDidCloseTerminal:o.window.onDidCloseTerminal}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o{constructor(e,t){this.hostName=e,this.user=t}toString(){return this.user?`${this.user}@${this.hostName}`:this.hostName}static stringify(e){if(e.user||e.hostName.toLowerCase()!==e.hostName){const t=e.user?{hostName:e.hostName,user:e.user}:{hostName:e.hostName},n=JSON.stringify(t);return Buffer.from(n,"utf8").toString("hex")}return e.hostName}static parse(e){try{const t=JSON.parse(Buffer.from(e,"hex").toString("utf8"));if(t)return new o(t.hostName,t.user)}catch(e){}return o.fromString(e)}static fromString(e){const t=e.lastIndexOf("@");return t>-1?new o(e.substring(t+1),e.substring(0,t)):new o(e)}}t.HostInfo=o},function(e,t){e.exports=require("os")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(29),r=n(2),s=n(3),i=n(1),a=n(0),c=n(5),l=n(4);let u;async function d(e,t){return new Promise((n,r)=>{t.trace(`Testing ssh with ${e} -V`);const s=[],i=[],a=o.spawn(e,["-V"]);a.stdout.on("data",e=>s.push(e)),a.stderr.on("data",e=>i.push(e)),a.on("error",e=>{t.debug("Got error from ssh: "+e.message),n(!1)}),a.on("exit",e=>{if(t.debug("ssh exited with code: "+e),e)return void n(!1);const o=Buffer.concat(s).toString("utf8").trim();o&&t.debug("Got stdout from ssh: "+o);const r=Buffer.concat(i).toString("utf8").trim();r&&t.debug("Got stderr from ssh: "+r);const a=r||o;a&&(a.match(/OpenSSH/i)?n(!0):(t.trace("ssh output did not match /OpenSSH/"),n(!1)))})})}t.generateMultiLineCommand=async function(e,t,n,o){const d=function(e){return e.user?`${e.user}@${e.hostName}`:`${e.hostName}`}(e),m=o&&o.cmdSegment||"",p=o&&o.allowPortForward?"":"-o ClearAllForwardings=true",f=await c.getConfigurationForHost(e),g=`"${await async function(e){if("string"!=typeof u){const t=a.workspace.getConfiguration().get("remote.SSH.path");try{u=await h(t,e)}catch(t){throw e.error("Finding installed ssh failed: "+t.message),t}}return u}(n)}" ${m||""} ${p} ${function(e){return l.isWindows?"":e&&e.ConnectTimeout?"":"-o ConnectTimeout=15"}(f)} ${function(e){return e&&e.RemoteCommand?"-o RemoteCommand=none":""}(f)} ${function(e){let t="";const n=a.workspace.getConfiguration().get("remote.SSH.configFile");return n&&(e.info(`Using SSH config file "${n}"`),t=`-F ${n}`),t}(n)} "${d}" bash`;if(n.debug("Running script with connection command: "+g),l.isWindows){if(!process.env.TEMP)throw new Error("The TEMP environment variable must be set");const n=Math.floor(1e9*Math.random()),o=s.join(process.env.TEMP,`vscode-linux-multi-line-command-${e.hostName}-${n}.sh`);try{await i.promisify(r.writeFile)(o,t)}catch(e){throw new Error(`Failed to write install script to path ${o}. ${e.message}`)}return`type "${o}" | ${g}`}return`${g} << 'EOSSH'\n${t}\nEOSSH`};const m=process.env.hasOwnProperty("PROCESSOR_ARCHITEW6432");async function h(e,t){if(e){if(await d(e,t))return e;t.error(`The specified path ${e} is not a valid SSH binary`)}return"win32"===process.platform?async function(e){const t=["ssh",s.join(process.env.windir,"System32\\OpenSSH\\ssh.exe"),s.join(process.env.ProgramFiles,"Git\\usr\\bin\\ssh.exe"),s.join(process.env["ProgramFiles(x86)"],"Git\\usr\\bin\\ssh.exe")];if(m){const e=process.env.SystemRoot||"C:\\WINDOWS",n=s.join(e,"Sysnative","OpenSSH","ssh.exe");t.unshift(n)}for(const n of t)if(await d(n,e))return n;throw new p}(t):async function(e){if(await d("ssh",e))return"ssh";throw new Error("ssh is not on the path")}(t)}t.findSsh=h;class p extends Error{constructor(){super("ssh installation not found")}}t.SshNotFoundError=p;const f="Learn More";t.handleSshNotFoundError=async function(){const e=await a.window.showErrorMessage("An SSH installation couldn't be found",{modal:!0},{title:f});if(e&&e.title===f)return a.commands.executeCommand("opensshremotes.getStarted")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(7),s=n(17),i=n(12),a=n(8),c=n(32),l=n(9),u=n(18);class d{constructor(e,t,n,o,r){this.host=e,this.remotePort=t,this.localPort=n,this.name=o,this.internal=r}close(){g(this)}}class m extends d{constructor(e,t,n,o,r,s){super(e,t,n,o,r),this.tokenSource=s}dispose(){this.tokenSource.cancel()}}let h=[];t.getActiveTunnels=function(){return h.filter(e=>!e.internal)};let p=new o.EventEmitter,f=p.event;function g(e){h=h.filter(t=>t!==e),e.dispose(),p.fire()}t.onDidChangeActiveTunnels=f,t.closeTunnels=function(){h.forEach(e=>e.dispose()),h=[],p.fire()},t.createTunnel=async function({host:e,remotePort:t,preferredLocalPort:n,name:d,internal:f,progress:y,logger:v}){try{const S=await async function(e){let t=await c.findFreePort(e,1,3e3);return t>0?t:c.findFreePort(c.randomPort(),10,3e3)}(n||t),$=await async function(e,t,n,c,u,d,p){return s.withRevealTerminalEvent(async f=>{let y;d.report({message:`([details](command:${s.REVEAL_TERMINAL_COMMAND} "Show details in terminal")) Setting up SSH tunnel`});const v=await async function(e,t,n,o){return i.generateMultiLineCommand(e,`echo -e '${w}' && sleep infinity`,o,{cmdSegment:`-L 127.0.0.1:${n}:127.0.0.1:${t}`,allowPortForward:!0})}(e,t,n,p);p.trace(`Spawning tunnel with: ${v}`);const S=new o.CancellationTokenSource;y=new m(e,t,n,c,u,S),h.push(y);const $=r.getInteractorForMsg(w);return a.runSshTerminalCommandWithLogin({systemInteractor:l.defaultSystemInteractor,command:v,host:e,nickname:"SSH Tunnel",logger:p,interactor:$.interactor,revealTerminal:f,token:S.token}).then(()=>{p.trace("SSH tunnel command completed unexpectedly")},e=>{p.trace("SSH tunnel command completed unexpectedly with error: "+(e&&e.message))}).finally(()=>{g(y)}),await $.result,p.info(`Spawned SSH tunnel between local port ${n} and remote port ${t}`),y})}(e,t,S,d,f,y,v);return y.report({message:"Waiting for port forwarding to be ready"}),v.info("Waiting for ssh tunnel to be ready"),await async function(e,t=1e4){let n=0;for(;await c.isFreePort(e);){if(n>t)throw new Error("Max wait time exhausted");await u.wait(100),n+=100}}(S),p.fire($),v.info(`Tunneling remote port ${t} to local port ${S}`),S}catch(t){const n=t.message||t,o=`Could not establish tunnel to "${e.hostName}" (${n}).`;throw v.error(o),new Error(o)}};const w="Connected to SSH Host - Please do not close this terminal"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(2),r=n(11),s=n(3),i=n(1),a=n(0),c=n(7),l=n(8),u=n(4),d=n(9),m=n(15),h=i.promisify(o.writeFile);async function p(e,t){return u.isWindows?await async function(e,t){e=e||"";const n=r.tmpdir(),o=s.join(n,"vscode_add_ssh_key_to_agent.ps1"),i=`\n\t\t# Check if it's already in the ssh-agent\n\t\t$KEY = "${e}"\n\t\tif ($KEY -ne "") {\n\t\t\t$KEY = (Resolve-Path "${e}").toString()\n\t\t}\n\n\t\techo 'PS: adding key to ssh-agent'\n\t\techo ssh-add $KEY\n\t\tssh-add $KEY\n\t\tif ($LASTEXITCODE -ne 0) {\n\t\t\techo ${t}##5##\n\t\t}\n\t`;return await h(o,i),{command:"",sendText:`powershell -ExecutionPolicy Bypass ${o}`}}(e,t):function(e,t){return{command:`\nINSTALL_SCRIPT=\`mktemp\`.sh\ncat << 'EOF' > $INSTALL_SCRIPT\n\t# expand the key path to be absolute\n\tKEY="\`echo ${e=e||""}\`"\n\techo SHELL-SCRIPT: KEY=$KEY\n\techo SHELL-SCRIPT: adding key to ssh-agent\n\tssh-add ${e}\n\tif (( $? > 0 ))\n\tthen\n\t\techo ${t}##5##\n\tfi\nEOF\n\nchmod +x $INSTALL_SCRIPT\n\n/bin/bash -ilc $INSTALL_SCRIPT\n`}}(e,t)}class f extends Error{constructor(){super("Key with passphrase must be in ssh-agent")}}t.NoSshAgentError=f,t.addKeyToSshAgent=async function(e,t,n){const o=m.generateUuid(),r=await p(e,o);let s;const i={onData:async e=>{if(void 0===(s=c.getExitCode(e,o)))n.error("Malformed exit code from add-ssh");else{if(0===s)return c.handlePassphrase(e,t);n.error("add-ssh-key failed")}return{}}};if(n.trace("Executing add-ssh-key:\n"+(r.sendText||r.command)),await l.runInteractiveSshTerminalCommand({systemInteractor:d.defaultSystemInteractor,command:r.command,sendText:r.sendText,interactor:i,nickname:"add-ssh-key",logger:n}),s)throw new f};const g="Configure SSH Agent",w="Continue without SSH Agent";t.handleNoSshAgentError=async function(e){let t="SSH Agent not found, please configure the agent.";const n=[g];e&&(n.push(w),t+=" You can also continue without an SSH Agent with a degraded user experience.");const o=await a.window.showErrorMessage(t,{modal:!0},...n);return o===w?(await a.workspace.getConfiguration("remote.SSH").update("showLoginTerminal",!0,a.ConfigurationTarget.Global),!0):(o===g&&a.env.openExternal(a.Uri.parse("https://aka.ms/vscode-remote/troubleshooting#_setting-up-the-ssh-agent")),!1)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class o{constructor(e){this._value=e}asHex(){return this._value}}class r extends o{constructor(){super([r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),"-",r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),"-","4",r._randomHex(),r._randomHex(),r._randomHex(),"-",r._oneOf(r._timeHighBits),r._randomHex(),r._randomHex(),r._randomHex(),"-",r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex(),r._randomHex()].join(""))}static _oneOf(e){return e[Math.floor(e.length*Math.random())]}static _randomHex(){return r._oneOf(r._chars)}}function s(){return new r}r._chars=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],r._timeHighBits=["8","9","a","b"],t.v4=s;const i=/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;function a(e){return i.test(e)}t.isUUID=a,t.parse=function(e){if(!a(e))throw new Error("invalid uuid");return new o(e)},t.generateUuid=function(){return s().asHex()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(4);function r(e){return e.replace(/\x1b\[\??[0-9]{0,3}(;[0-9]{1,3})?[a-zA-Z]/g,"").replace(/\r/g,"")}t.lastNonemptyLine=function(e){const t=e.split("\n");if(o.isWindows)for(let e=t.length-1;e>=0;e--){const n=r(t[e]);if(n)return n}const n=t.filter(e=>!!e);return n[n.length-1]},t.stripEscapeSequences=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);let r;t.REVEAL_TERMINAL_COMMAND="opensshremotes.revealTerminal",o.commands.registerCommand(t.REVEAL_TERMINAL_COMMAND,()=>{r&&r.fire()}),t.withRevealTerminalEvent=async function(e){if(r)throw new Error("withRevealTerminalEvent can only be called once at a time globally within the app");r=new o.EventEmitter;try{return await e(r.event)}finally{r.dispose(),r=void 0}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wait=async function(e){return new Promise((t,n)=>{setTimeout(()=>t(),e)})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(2),r=n(3),s=n(1),i=n(0),a="c3fe2d8acde04e579880413ae4622a1f551efdcc";let c;async function l(){if(!c){const e=await s.promisify(o.readFile)(r.join(i.env.appRoot,"product.json"),"utf8");c=JSON.parse(e)}return c}t.getProductInfo=async function(){let e=await l();return e.commit&&e.serverDataFolderName||(e={commit:a,quality:"insider",serverDataFolderName:".vscode-server-oss"}),e}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(21),s=n(22),i=n(27),a=n(12),c=n(8),l=n(5),u=n(14),d=n(13),m=n(34),h=n(36),p=n(10),f=n(37),g=n(19),w=n(9);class y{constructor(e,t,n,o){this.folderHistoryManager=e,this.workspaceFolderDescriptors=t,this.logger=n,this.disposables=o}async resolve(e,t){this.logger.debug(`SSH Resolver called for "${e}", attempt ${t.resolveAttempt}`);const[n,r]=e.split("+");if("ssh-remote"!==n)throw new Error(`SSH Resolver called for invalid protocol "${n}"`);const s=p.HostInfo.parse(r);this.logger.debug(`SSH Resolver called for host: ${s}`);let c=`Could not establish connection to "${s.hostName}".`;this.logger.info(`Setting up SSH remote "${s.hostName}"`);try{return await o.window.withProgress({location:o.ProgressLocation.Notification,title:`Setting up SSH Host ${s.hostName}`,cancellable:!1},async t=>{const n=await i.resolve(e,s,t,this.logger,this.disposables);return this.folderHistoryManager.addFolders(this.workspaceFolderDescriptors),0===this.workspaceFolderDescriptors.length&&(_()&&o.commands.executeCommand("workbench.view.explorer"),_()&&o.commands.executeCommand("workbench.action.terminal.toggleTerminal")),n})}catch(e){if(C.error(e.message),e instanceof u.NoSshAgentError)throw u.handleNoSshAgentError(!1),o.RemoteAuthorityResolverError.NotAvailable(e.message,!0);if(e instanceof a.SshNotFoundError)throw a.handleSshNotFoundError(),o.RemoteAuthorityResolverError.NotAvailable(e.message,!0);throw 1===t.resolveAttempt&&(C.showLog(),e.message&&(c+=" "+e.message),async function(e){e.endsWith(".")||(e+=".");const t=await o.window.showErrorMessage(e,{modal:!0},...$);t&&await t.execute()}(c)),e}finally{this.logger.info("------\n\n\n\n")}}}class v{constructor(){this.title="Reload Window"}async execute(){await o.commands.executeCommand("workbench.action.reloadWindow")}}const S=[new v,new class{constructor(){this.title="Open Recent..."}async execute(){await o.commands.executeCommand("workbench.action.openRecent")}},new class{constructor(){this.title="Open Documentation"}async execute(){await R()}},new class{constructor(){this.title="Open SSH Configuration File"}async execute(){await l.configureSshHosts(C)}},new class{constructor(){this.title="Open Settings"}async execute(){x()}}],$=[new class{constructor(){this.title="Close Remote"}async execute(){await o.commands.executeCommand("workbench.action.closeWindow")}},new class{constructor(e){this.moreActions=e,this.title="More Actions...",this.isCloseAffordance=!0}async execute(){const e=this.moreActions.map(e=>({label:e.title,action:e})),t=await o.window.showQuickPick(e,{ignoreFocusOut:!0,placeHolder:"Pick an action to help resolve the problem."});t&&await t.action.execute()}}(S),new class extends v{constructor(){super(...arguments),this.title="Retry"}}];let C;async function E(e){const{serverDataFolderName:t}=await g.getProductInfo();return`\n\t\tkill -9 \`ps ax | grep "out/vs/server/main.js" | grep -v grep | awk '{print $1}'\`\n\t\tkill -9 \`ps ax | grep "remoteExtensionHostAgent.js" | grep -v grep | awk '{print $1}'\`\n\t\tkill -9 \`ps ax | grep "watcherService" | grep -v grep | awk '{print $1}'\`\n\t\trm -rf $HOME/${t}/${e?"":"bin"}\n\t\trm -rf $HOME/.vscode-remote/${e?"":"bin"}\n\t`}function _(){const e=o.workspace.getConfiguration().get("workbench.startupEditor");return"welcomePage"!==e&&"welcomePageInEmptyWorkbench"!==e}function b(){const{name:e,publisher:t}=n(6);return o.commands.executeCommand("vscode.openIssueReporter",`${t}.${e}`)}function x(){const{name:e,publisher:t,extensionPack:r}=n(6),s=[`${t}.${e}`];return r&&r.forEach(e=>s.push(e)),o.commands.executeCommand("workbench.action.openSettings",`@ext:${s.join(",")}`)}function H(){return o.env.openExternal(o.Uri.parse("https://aka.ms/vscode-remote/ssh/provide-feedback"))}function T(){return o.env.openExternal(o.Uri.parse("https://aka.ms/vscode-remote/ssh/getting-started"))}function R(){return o.env.openExternal(o.Uri.parse("https://aka.ms/vscode-remote/ssh"))}function O(e){return`ssh-remote+${p.HostInfo.stringify(e)}`}async function A(){const e=await s.pickSshHost(C);if(e){if("command"===e.type&&"configure"===e.id)return l.configureSshHosts(C),null;if("host"===e.type)return e.host}return null}async function k(e,t=!1){await o.commands.executeCommand("vscode.newWindow",{remoteAuthority:O(e),reuseWindow:t})}t.activate=function(e){const t=o.extensions.all.find(e=>"ms-vscode-remote.remote-ssh-nightly"===e.id),s=o.extensions.all.find(e=>"ms-vscode-remote.remote-ssh"===e.id);t&&s&&o.window.showErrorMessage("Both remote-ssh and remote-ssh-nightly are installed. You must *uninstall*, not disable, the other remote extension.",{modal:!0}),C=new f.Logger("Remote - SSH"),e.subscriptions.push(o.Disposable.from(C));const u=new r.FolderHistoryManager(e),p=function(){if(o.workspace.workspaceFile)return h.nonFalsy([r.FolderDescriptor.fromUri(o.workspace.workspaceFile)]);const e=o.workspace.workspaceFolders;return e?h.nonFalsy(e.map(e=>r.FolderDescriptor.fromUri(e.uri))):[]}(),g=new y(u,p,C,e.subscriptions);return o.workspace.registerRemoteAuthorityResolver("ssh-remote",g),function(e){const{name:t,version:o}=n(6);e.info(`${t}@${o}`),e.info(`${process.platform} ${process.arch}`)}(C),e.subscriptions.push(o.commands.registerCommand("opensshremotes.showLog",()=>{C.showLog()})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openEmptyWindow",async()=>{const e=await A();e&&k(e)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openEmptyWindowOnCurrentHost",async()=>{const e=i.getActiveRemote();e&&k(e)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openEmptyWindowInCurrentWindow",async()=>{const e=await A();e&&k(e,!0)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.openConfigFile",async()=>{await l.configureSshHosts(C)})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.cleanDevBox",async()=>{const e=await A();if(e){const t=await E(!0);C.trace("Running script on remote: "+t);const n=await a.generateMultiLineCommand(e,t,C);await c.runSshTerminalCommandWithLogin({command:n,host:e,logger:C,nickname:"Uninstall VS Code Server",systemInteractor:w.defaultSystemInteractor})}})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.cleanRemoteServer",async()=>{const e=await A();if(e){const t=await E();C.trace("Running script on remote: "+t);const n=await a.generateMultiLineCommand(e,t,C);await c.runSshTerminalCommandWithLogin({command:n,host:e,logger:C,nickname:"Kill VS Code Server",systemInteractor:w.defaultSystemInteractor})}})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.manageTunnel",async()=>{const t=i.getActiveRemote();return t?await m.getTunnelAddress(e,t,C):o.window.showWarningMessage("Port forwarding requires a workspace on a SSH host.")})),e.subscriptions.push(o.commands.registerCommand("opensshremotes.closeTunnel",async()=>await m.closeTunnel(C))),e.subscriptions.push(o.commands.registerCommand("opensshremotes.getHelp",async()=>R())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.getStarted",async()=>T())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.reportIssue",async()=>b())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.settings",async()=>x())),e.subscriptions.push(o.commands.registerCommand("opensshremotes.provideFeedback",async()=>H())),{workspace:{sshHost:i.getActiveRemote,folders:p,folderHistory:u},sshConfiguration:{edit:()=>l.configureSshHosts(C),hostNames:l.getConfiguredSshHostNames,onDidChange:l.onDidChangeSshConfiguration},actions:{openEmptyWindowOnSshHost:k,reportIssue:b,provideFeedback:H,getHelp:R,getStarted:T},tunnels:{open:async()=>{const t=i.getActiveRemote();if(t)return m.openTunnel(e,t,!1,C)},close:async e=>{await e.close()},active:d.getActiveTunnels,onDidChange:d.onDidChangeActiveTunnels,description:m.tunnelDescription,label:m.tunnelLabel}}},t.deactivate=function(){i.shutdown()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(10);class s{constructor(e,t){this.remote=e,this.folder=t}static fromUri(e){if("untitled"===e.scheme)return null;const t=e.authority,[n,o]=t.split("+");return"ssh-remote"===n?new s(o,e.path):null}toUri(){return o.Uri.parse(`vscode-remote://ssh-remote+${this.remote}${this.folder}`)}}t.FolderDescriptor=s;class i{constructor(e){this.context=e,this._folderHistoryCache=null}get folderHistoryCache(){if(!this._folderHistoryCache){const e=this.context.globalState.get(i.KEY);this._folderHistoryCache=new a(e)}return this._folderHistoryCache}addFolders(e){const t=this.context.globalState.get(i.KEY),n=new a(t);n.openFolders(e),this.context.globalState.update(i.KEY,n.data)}removeFolder(e){const t=this.context.globalState.get(i.KEY),n=new a(t);n.deleteFolder(e)&&this.context.globalState.update(i.KEY,n.data)}startGetFolderSession(){}stopGetFolderSession(){this._folderHistoryCache=null}getFolders(e){return this.folderHistoryCache.getFolders(e)}}i.KEY="folder.history.v1",t.FolderHistoryManager=i;class a{constructor(e){this.historyData=Object.create(null),this._hostNamesToRemotes=null,e&&(this.historyData=e)}get data(){return this.historyData}openFolders(e){e.forEach(e=>{let t=this.historyData[e.remote];t||(t={},this.historyData[e.remote]=t),t[e.folder]=!0})}deleteFolder(e){let t=!1,n=this.historyData[e.remote];return n&&(n[e.folder]&&(delete n[e.folder],t=!0),0===Object.keys(n).length&&(delete this.historyData[e.remote],t=!0)),t}getFolders(e){let t=[];return(this.hostNamesToRemotes[e]||[]).forEach(e=>{let n=this.historyData[e];Object.keys(n).forEach(n=>{t.push(new s(e,n))})}),t}get hostNamesToRemotes(){if(!this._hostNamesToRemotes){this._hostNamesToRemotes=Object.create(null);let e=this._hostNamesToRemotes;Object.keys(this.historyData).forEach(t=>{const n=r.HostInfo.parse(t);let o=e[n.hostName];o||(o=[],e[n.hostName]=o),o.push(t)})}return this._hostNamesToRemotes}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(5),s=n(10);class i{constructor(e){this.label=e}}class a{constructor(){this.label="Configure SSH Hosts...",this.alwaysShow=!0}}class c{constructor(){this.hostName="",this.alwaysShow=!0}get label(){return`➤ ${this.hostName}`}}async function l(e,t){return new Promise((n,r)=>{const l=function(e){const t=e.map(e=>new i(e)),n=new a,r=o.window.createQuickPick();r.ignoreFocusOut=!0,r.title="Select configured SSH host or enter user@host";const s=new c;let l=!1;const u=()=>{const e=[...t];l&&e.push(s),e.push(n),r.items=e};return u(),r.onDidChangeValue(e=>{s.hostName=e,l="string"==typeof e&&e.length>0,u()}),r}(e);let u;l.onDidAccept(async()=>{l.busy=!0;const e=l.selectedItems[0];if(e instanceof a)return void n({type:"command",id:"configure"});const o=e instanceof c?e.hostName:e.label;u=s.HostInfo.fromString(o),t.info(`Selected ${u.toString()}`),l.busy=!1,l.hide(),l.dispose()}),l.onDidHide(async()=>{n(u?{type:"host",host:u}:null)}),l.show()})}t.pickSshHost=async function(e){e.info("Picking SSH host");const t=await r.getConfiguredSshHosts();return await l(t,e)}},function(e,t,n){"use strict";const o=n(1),r=n(24),s=/\s/,i=/\r|\n/,a=/^(Host|Match)$/i,c=1,l=2;function u(e,t){return t.hasOwnProperty(e.param)&&t[e.param]===e.value}class d extends Array{compute(e){const t={},n=(e,n)=>{if("IdentityFile"===e){(t[e]||(t[e]=[])).push(n)}else null==t[e]&&(t[e]=n)};for(const t of this)t.type===c&&("Host"===t.param?r(t.value,e)&&(n(t.param,t.value),t.config.filter(e=>e.type===c).forEach(e=>n(e.param,e.value))):"Match"===t.param||n(t.param,t.value));return t}find(e={}){if("function"==typeof e)return super.find(e);if(!e||!("Host"in e||"Match"in e))throw new Error("Can only find by Host or Match");return super.find(t=>u(t,e))}remove(e={}){if(!e||!("Host"in e||"Match"in e))throw new Error("Can only remove by Host or Match");const t="function"==typeof e?super.findIndex(e):super.findIndex(t=>u(t,e));if(t>=0)return this.splice(t,1)}toString(){return this.constructor.stringify(this)}append(e){let t="  ";e:for(const e of this)if(a.test(e.param))for(const n of e.config)if(n.before){t=n.before;break e}if(this.length>0){let e=this[this.length-1];e.config&&(e=e.config[e.config.length-1]),e.after.trim()||(e.after="\n")}let n=this,o=this;for(const r in e){const s={type:c,param:r,separator:" ",value:e[r],before:"",after:"\n"};a.test(r)?((n=o).push(s),n=s.config=new d):(s.before=n===o?"":t,n.push(s))}return o}static stringify(e){let t="";const n=(e,t)=>Array.isArray(e)?e.map(e=>n(e,s.test(e))).join(" "):t?`"${e}"`:e,o=e=>{if(t+=e.before,e.type===l)t+=e.content;else if(e.type===c){const o=e.quoted||/IdentityFile/i.test(e.param)&&s.test(e.value),r=n(e.value,o);t+=`${e.param}${e.separator}${r}`}t+=e.after,e.config&&e.config.forEach(o)};return e.forEach(o),t}static get DIRECTIVE(){return c}static get COMMENT(){return l}static parse(e){let t=0,n=u(),o=new d,r=o;function u(){return e[t++]}function m(){let e="";for(;s.test(n);)e+=n,n=u();return e}function h(){let e=m();return"="===n&&(e+=n,n=u()),e+m()}function p(){let e="",t=!1,o=!1;for(;n&&!i.test(n);)o?(e+='"'===n?n:`\\${n}`,o=!1):'"'!==n||e&&!t?"\\"===n?o=!0:e+=n:t=!t,n=u();if(t||o)throw new Error(`Unexpected line break at ${e}`);return e.trim()}function f(){const e=[];let t="",o=!1,r=!1;for(;n&&!i.test(n);)r?(t+='"'===n?n:`\\${n}`,r=!1):'"'===n?o=!o:"\\"===n?r=!0:o?t+=n:" "===n?t&&(e.push(t),t=""):t+=n,n=u();if(o||r)throw new Error(`Unexpected line break at ${e.concat(t).join(" ")}`);return e.push(t),e.length>1?e:e[0]}function g(){const e=c,t=function(){let e="";for(;n&&" "!==n&&"="!==n;)e+=n,n=u();return e}(),o="host"==t.toLowerCase(),r={type:e,param:t,separator:h(),quoted:!o&&'"'===n,value:o?f():p()};return r.quoted||delete r.quoted,r}function w(){const e=m(),t="#"===n?function(){const e=l;let t="";for(;n&&!i.test(n);)t+=n,n=u();return{type:e,content:t}}():g(),o=function(){let e="";for(;i.test(n);)e+=n,n=u();return e}();return t.before=e,t.after=o,t}for(;n;){let e=w();e.type===c&&a.test(e.param)?((o=r).push(e),o=e.config=new d):o.push(e)}return r}}d.find=o.deprecate((e,t)=>{const n=e.find(t);return n?[n,e.indexOf(n)]:null},"SSHConfig.find() is deprected. Use SSHConfig.prototype.find() instead."),e.exports=d},function(e,t,n){"use strict";function o(e,t){return e=e.replace(/\./g,"\\.").replace(/\+/g,"\\+").replace(/\*/g,".*").replace(/\?/g,".?"),new RegExp("^(?:"+e+")$").test(t)}e.exports=function(e,t){const n=Array.isArray(e)?e:e.split(/,/);let r=!1;for(const e of n){if("!"==e[0]&&o(e.slice(1),t))return!1;o(e,t)&&(r=!0)}return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);class r{constructor(e){this.label=e}}class s{constructor(){this.label="Help",this.description="about SSH configuration files",this.alwaysShow=!0}}class i{constructor(){this.label="Settings",this.description="specify a custom configuration file",this.alwaysShow=!0}}async function a(e){return new Promise((t,n)=>{const a=function(e){const t=o.window.createQuickPick();return t.ignoreFocusOut=!0,"string"==typeof e?(t.title="Edit custom SSH configuration file",t.items=[new r(e),new i,new s]):(t.title="Select SSH configuration file to edit",t.items=[...e.map(e=>new r(e)),new i,new s]),t}(e);let c;a.onDidAccept(()=>{const e=a.selectedItems[0];e instanceof s?c={type:"command",id:"help"}:e instanceof i?c={type:"command",id:"settings"}:e.label&&(c={type:"file",path:e.label}),a.hide()}),a.onDidHide(()=>{t(c||void 0)}),a.show()})}t.pickSshConfigurationFile=async function(e){return await a(e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(11),r=n(2),s=n(3),i=n(1),a=i.promisify(r.mkdir),c=i.promisify(r.exists);t.untildify=function(e){return e.replace(/^~($|\/|\\)/,`${o.homedir()}$1`)};const l=100;t.mkdirp=async function(e){return await async function e(t,n,o){if(!(n>=o||await c(t))){const r=s.dirname(t);r!==t&&await e(r,++n,o),await a(t)}}(e,0,l)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(7),s=n(28),i=n(12),a=n(8),c=n(13),l=n(9),u=n(15),d=n(18),m=n(19),h=n(17),p="remote.sshContext";let f=null;async function g(e,t,n,c,l=u.generateUuid()){const p=await async function(e,t,n){const r=await m.getProductInfo();let a;n.info(`Using commit id "${r.commit}" and quality "${r.quality}" for server`);let c=o.workspace.getConfiguration().get("remote.SSH.defaultExtensions");if(c&&c.length>0){const e=/^[a-z0-9][a-z0-9\-]*\.[a-z0-9][a-z0-9\-]*$/i;(c=c.filter(t=>e.test(t))).length>0&&(a=c.map(e=>`--install-extension ${e}`).concat("--force").join(" "))}const l=s.serverInstallScript({uuid:t,serverDataFolderName:r.serverDataFolderName,quality:r.quality,commit:r.commit,enableTelemetry:!!o.workspace.getConfiguration().get("telemetry.enableTelemetry"),extensionsSegment:a,enableWebAccess:w()});return i.generateMultiLineCommand(e,l,n)}(t,l,c);return c.info("Install and start server if needed"),h.withRevealTerminalEvent(async s=>{n.report({message:`([details](command:${h.REVEAL_TERMINAL_COMMAND} "Show details in terminal")) Initializing VS Code Server`});let i=0;e:for(;i++<30;){const u=await a.runSshTerminalCommandWithLogin({systemInteractor:e,command:p,host:t,nickname:"install",logger:c,revealTerminal:s});c.debug(`Received install output: ${u}`);const m=r.getExitCode(u,l);if("number"==typeof m){if(0===m){if(u.match(/Network is unreachable/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("Network is unreachable");if(u.match(/Could not resolve hostname/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("Could not resolve hostname");if(u.match(/The process tried to write to a nonexistent pipe/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("The process tried to write to a nonexistent pipe");if(u.match(/Connection timed out/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("The connection timed out");if(u.match(/Operation timed out/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("The operation timed out");if(u.match(/No route to host/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("No route to host");if(u.match(/Can't assign requested address/))throw o.RemoteAuthorityResolverError.TemporarilyNotAvailable("Can't assign requested address");const e=y(u,l);if("object"==typeof e&&e.agent>0)return c.info(`Server is listening on port ${e.agent}`),e;throw c.error(`Failed to parse remote port from server output: ${u}`),o.RemoteAuthorityResolverError.NotAvailable("",!0)}if(24===m){c.error(`Server installation process already in progress - waiting and retrying ${i}`),n.report({message:`Connect to VS Code Server - retry ${i}`}),await d.wait(1e3);continue e}if(25===m)throw c.error("Server download failed"),o.RemoteAuthorityResolverError.NotAvailable("Downloading VS Code Server failed. Please try again later.",!0);if(26===m)throw c.error("Neither curl nor wget is installed - can't download the Server"),o.RemoteAuthorityResolverError.NotAvailable("Downloading VS Code Server failed - please install either curl or wget on the remote.",!0);if(27===m)throw c.error("Unsupported architecture"),o.RemoteAuthorityResolverError.NotAvailable("The remote server architecture is not supported",!0);if(28===m){c.debug(`Server status check failed - waiting and retrying ${i}`),n.report({message:`Connect to VS Code Server - retry ${i}`}),await d.wait(1e3);continue e}throw 29===m?(c.error("Architecture only available on VS Code Insiders"),o.RemoteAuthorityResolverError.NotAvailable("The remote server architecture is only supported on VS Code Insiders",!0)):(c.error(`Server installation failed with exit code ${m} and output ${u}`),o.RemoteAuthorityResolverError.NotAvailable("",!0))}throw c.error(`Server installation failed with unknown exit code and output ${u}`),o.RemoteAuthorityResolverError.NotAvailable("",!0)}throw o.RemoteAuthorityResolverError.NotAvailable("",!0)})}function w(){return!!o.workspace.getConfiguration().get("remote.SSH.enableWebAccess")}function y(e,t){const n=new RegExp(`${t}==([0-9]*)==([0-9]*)==`).exec(e);if(n){const e=parseInt(n[1]),t=parseInt(n[2]);return Number.isNaN(e)||Number.isNaN(t)?void 0:{agent:e,webViewServer:t}}}t.resolve=async function(e,t,n,r,s){const i=await g(l.defaultSystemInteractor,t,n,r),a=await c.createTunnel({host:t,remotePort:i.agent,preferredLocalPort:i.agent,name:"VS Code Server",internal:!w(),progress:n,logger:r});return w()&&await c.createTunnel({host:t,remotePort:i.webViewServer,preferredLocalPort:i.webViewServer,name:"VS Code WebViewServer",internal:!w(),progress:n,logger:r}),r.info(`Resolved "${e}" to "127.0.0.1:${a}"`),o.commands.executeCommand("setContext",p,!0),s.push(function(e,t){return o.workspace.registerResourceLabelFormatter({scheme:"vscode-remote",authority:e,formatting:{label:"${path}",separator:"/",workspaceSuffix:`SSH: ${t.hostName}`,tildify:!0,normalizeDriveLetter:!0}})}(e,t)),f=t,new o.ResolvedAuthority("127.0.0.1",a)},t.installServer=g,t.getActiveRemote=function(){return f},t.shutdown=function(){o.commands.executeCommand("setContext",p,!1),f=null,c.closeTunnels()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.serverInstallScript=function({uuid:e,quality:t,commit:n,enableTelemetry:o,extensionsSegment:r="",serverDataFolderName:s,enableWebAccess:i}){return`\necho "Running remote connection script"\nCOMMIT_ID="${n}"\nEXTENSIONS="${r}"\nTELEMETRY="${o?"":"--disable-telemetry"}"\nexport VSCODE_AGENT_FOLDER=$HOME/${s}\n\n#setup\nVSCH_DIR="$VSCODE_AGENT_FOLDER/bin/$COMMIT_ID"\nVSCH_LOGFILE="$VSCODE_AGENT_FOLDER/.$COMMIT_ID.log"\n\nif [ ! -d "$VSCH_DIR" ]; then\n\tmkdir -p $VSCH_DIR\nfi\n\nARCH=$(uname -sm | sed 's/^linux //gi')\n\ncase $ARCH in\n\tx86_64) VSCODE_ARCH="x64";;\n\tarmv7l)\n\t\t${function(e,t){return"insider"===t?'\n\t\t\tVSCODE_ARCH="armhf"\n\t\t':`\n\t\t\techo "$ARCH is only supported when running VS Code Insiders"\n\t\t\techo "${e}##29##"\n\t\t\texit 0\n\t\t`}(e,t)}\n\t\t;;\n\t*)\n\t\techo "Unsupported architecture: $ARCH"\n\t\techo "${e}##27##"\n\t\texit 0\n\t\t;;\nesac\n\nMAIN_LOCKFD=99\nCLEANUP_LOCKFD=98\n\n\n\t## Copyright (C) 2009 Przemyslaw Pawelczyk <przemoc@gmail.com>\n\t## This script is licensed under the terms of the MIT license.\n\t## https://opensource.org/licenses/MIT\n\n\tget_lockfile() {\n\t\techo "$VSCH_DIR/vscode-remote-lock.$1"\n\t}\n\n\t# PRIVATE\n\t_lock()             { flock -$1 $2; }\n\t_no_more_locking()  { _lock u $2; _lock xn $2 && rm -f $(get_lockfile $1); }\n\t_prepare_locking()  { eval "exec $2>\\"$(get_lockfile $1)\\""; trap "_no_more_locking $1 $2" EXIT; }\n\n\t# PUBLIC - all take lock FD\n\texlock_now()        { _lock xn $1; }  # obtain an exclusive lock immediately or fail\n\texlock()            { _lock x $1; }   # obtain an exclusive lock\n\tshlock()            { _lock s $1; }   # obtain a shared lock\n\tunlock()            { _lock u $1; }   # drop a lock\n\n_prepare_locking ${n} $MAIN_LOCKFD\n\nexlock_now $MAIN_LOCKFD\nif (( $? > 0 ))\nthen\n\techo "Installation already in progress..."\n\techo "${e}##24##"\n\texit 0\nfi\n\n# Migrate old data if needed\n# Check data/ because we just created VSCH_DIR for the lockfile\nif [ ! -d "$VSCODE_AGENT_FOLDER/data" ]; then\n\tif [ -d "$HOME/.vscode-remote" ]; then\n\t\techo "Migrating .vscode-remote to $VSCODE_AGENT_FOLDER..."\n\t\tcp -r "$HOME/.vscode-remote/data" "$VSCODE_AGENT_FOLDER/data"\n\t\tcp -r "$HOME/.vscode-remote/extensions" "$VSCODE_AGENT_FOLDER/extensions"\n\tfi\nfi\n\n# Delete old servers if needed\nTO_DELETE=$(ls -1 --sort=time $VSCODE_AGENT_FOLDER/bin | tail -n +6)\nfor COMMIT_TO_DELETE in $TO_DELETE; do\n\techo "Found old VS Code install $COMMIT_TO_DELETE, attempting to clean up"\n\n\t_prepare_locking $COMMIT_TO_DELETE $CLEANUP_LOCKFD\n\texlock_now $CLEANUP_LOCKFD\n\tif (( $? == 0 )); then\n\t\tRUNNING="\`ps ax | grep $COMMIT_TO_DELETE | grep -v grep | wc -l | tr -d '[:space:]'\`"\n\t\tif [ "$RUNNING" = "0" ]; then\n\t\t\techo "Deleting old install from $VSCODE_AGENT_FOLDER/bin/$COMMIT_TO_DELETE"\n\t\t\trm -rf $VSCODE_AGENT_FOLDER/bin/$COMMIT_TO_DELETE\n\t\telse\n\t\t\techo "Install still has running processes, not deleting: $COMMIT_TO_DELETE"\n \t\tfi\n\telse\n\t\techo "Failed to acquire lock for install, not deleting: $COMMIT_TO_DELETE"\n\tfi\ndone\n\n# install if needed\nif [ ! -f "$VSCH_DIR/server.sh" ]\nthen\n\techo "Installing to $VSCH_DIR..."\n\tSTASHED_WORKING_DIR="\`pwd\`"\n\tcd $VSCH_DIR\n\n\twget --version &> /dev/null\n\tif (( $? == 0 ))\n\tthen\n\t\techo "Downloading with wget"\n\t\tWGET_ERRORS=$(2>&1 wget -nv -O vscode-server-linux-$VSCODE_ARCH.tar.gz https://update.code.visualstudio.com/commit:$COMMIT_ID/server-linux-$VSCODE_ARCH${i?"-web":""}/${t})\n\t\tif (( $? != 0 ))\n\t\tthen\n\t\t\tprintenv\n\t\t\techo $WGET_ERRORS\n\t\t\techo "${e}##25##"\n\t\t\texit 0\n\t\telse\n\t\t\techo "Download complete"\n\t\tfi\n\telse\n\t\tcurl --version &> /dev/null\n\t\tif (( $? == 0 ))\n\t\tthen\n\t\t\techo "Downloading with curl"\n\t\t\tCURL_OUTPUT=$(curl -L https://update.code.visualstudio.com/commit:$COMMIT_ID/server-linux-$VSCODE_ARCH${i?"-web":""}/${t} --output vscode-server-linux-$VSCODE_ARCH.tar.gz -w "%{http_code}")\n\t\t\tif [[ ($? != 0) || ($CURL_OUTPUT != 2??) ]]\n\t\t\tthen\n\t\t\t\tprintenv\n\t\t\t\techo $CURL_OUTPUT\n\t\t\t\techo "${e}##25##"\n\t\t\t\texit 0\n\t\t\telse\n\t\t\t\techo "Download complete"\n\t\t\tfi\n\t\telse\n\t\t\tprintenv\n\t\t\techo "Neither wget nor curl is installed"\n\t\t\techo "${e}##26##"\n\t\t\texit 0\n\t\tfi\n\tfi\n\n\n\ttar -xf vscode-server-linux-$VSCODE_ARCH.tar.gz --strip-components 1\n\tif (( $? > 0 ))\n\tthen\n\t\techo "WARNING: tar exited with non-0 exit code"\n\tfi\n\n\t# cheap sanity check\n\tif [ ! -f $VSCH_DIR/node ]\n\tthen\n\t\techo "WARNING: $VSCH_DIR/node doesn't exist. Download/untar may have failed."\n\tfi\n\n\tif [ ! -f $VSCH_DIR/server.sh ]\n\tthen\n\t\techo "WARNING: $VSCH_DIR/server.sh doesn't exist. Download/untar may have failed."\n\tfi\n\n\trm vscode-server-linux-$VSCODE_ARCH.tar.gz\n\tcd $STASHED_WORKING_DIR\n\n\t# install extensions\n\tif [ ! -z "$EXTENSIONS" ]\n\tthen\n\t\techo "Installing extensions..."\n\t\t$VSCH_DIR/server.sh $TELEMETRY $EXTENSIONS\n\tfi\n\nelse\n\techo "Found existing installation at $VSCH_DIR..."\nfi\n\n# launch if needed\nRUNNING="\`ps ax | grep $VSCH_DIR/server.sh | grep -v grep | wc -l | tr -d '[:space:]'\`"\nif [ "$RUNNING" = "0" ]\nthen\n\tprintenv\n\techo "Starting server..."\n\texport PATH="$VSCH_DIR/bin:$PATH"\n\t$VSCH_DIR/server.sh --enable-remote-auto-shutdown $TELEMETRY --port=0 &> $VSCH_LOGFILE < /dev/null &\n\n\tstopTime=$((SECONDS+4))\n\n\twhile (($SECONDS < $stopTime))\n\tdo\n\t\tPORT=\`cat "$VSCH_LOGFILE" | grep -a -E 'Extension host agent listening on [0-9]+' | grep -v grep | grep -o -E '[0-9]+'\`\n\t\tif [[ $PORT != '' ]]\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\n\t\techo "Waiting for server log..."\n\t\tsleep .5\n\tdone\nelse\n\techo "Found running server..."\nfi\n\necho " "\necho "*"\necho "* Reminder: You may only use this software with Visual Studio family products,"\necho "* as described in the license (https://go.microsoft.com/fwlink/?linkid=2077057)"\necho "*"\necho " "\n\nPORT=\`cat "$VSCH_LOGFILE" | grep -a -E 'Extension host agent listening on [0-9]+' | grep -v grep | grep -o -E '[0-9]+'\`\nWEBVIEWPORT=\`cat "$VSCH_LOGFILE" | grep -a -E 'webview server listening on [0-9]+' | grep -v grep | grep -o -E '[0-9]+'\`\nif [[ $PORT == '' ]]\nthen\n\techo "Server did not start successfully. Full server log >>>"\n\tcat $VSCH_LOGFILE\n\techo "<<< End of server log"\n\texit 0\nfi\n\n# If the server was already running, ensure that it won't shut down in the near future\nif [ "$RUNNING" != "0" ]; then\n\t# In case the server is close to timing out and shutting down, ask it to delay shutdown\n\twget --version &> /dev/null\n\tif (( $? == 0 ))\n\tthen\n\t\techo "Checking server status with wget"\n\t\tWGET_OUT=$(wget --no-proxy -nv -O - http://127.0.0.1:$PORT/delay-shutdown 2>&1)\n\t\tif [[ $? != 0 ]]; then\n\t\t\techo $WGET_OUT\n\t\t\techo "${e}##28##"\n\t\t\texit 0\n\t\tfi\n\telse\n\t\tcurl --version &> /dev/null\n\t\tif (( $? == 0 ))\n\t\tthen\n\t\t\techo "Checking server status with curl"\n\t\t\tCURL_OUTPUT=$(curl --noproxy 127.0.0.1 -s http://127.0.0.1:$PORT/delay-shutdown -w " %{http_code}")\n\t\t\tif [[ ($? != 0) || ($CURL_OUTPUT != "OK 200") ]]; then\n\t\t\t\techo $CURL_OUTPUT\n\t\t\t\techo "${e}##28##"\n\t\t\t\texit 0\n\t\t\tfi\n\t\telse\n\t\t\techo "Neither wget nor curl is installed"\n\t\t\techo "${e}##26##"\n\t\t\texit 0\n\t\tfi\n\tfi\nfi\n\necho "${e}==$PORT==$WEBVIEWPORT=="\n\nunlock $MAIN_LOCKFD\n`}},function(e,t){e.exports=require("child_process")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addDisposableListener=function(e,t,n){return e.on(t,n),{dispose(){e.removeListener(t,n)}}},t.dispose=function e(t,...n){return Array.isArray(t)?(t.forEach(e=>e&&e.dispose()),[]):0===n.length?t?(t.dispose(),t):void 0:(e(t),e(n),[])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(2),r=n(1).promisify(o.stat);t.exists=async function(e){try{return await r(e),!0}catch(e){return!1}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(33);function r(e){try{e.removeAllListeners("connect"),e.removeAllListeners("error"),e.end(),e.destroy(),e.unref()}catch(e){console.error(e)}}t.randomPort=function(){return 1025+Math.floor(64510*Math.random())},t.findFreePort=function(e,t,n){let s=!1;return new Promise(i=>{const a=setTimeout(()=>{if(!s)return s=!0,i(0)},n);!function e(t,n,s){if(0===n)return s(0);const i=new o.Socket;i.once("connect",()=>(r(i),e(t+1,n-1,s))),i.once("data",()=>{}),i.once("error",o=>(r(i),"ECONNREFUSED"!==o.code?e(t+1,n-1,s):s(t))),i.connect(t,"127.0.0.1")}(e,t,e=>{if(!s)return s=!0,clearTimeout(a),i(e)})})},t.isFreePort=async function(e){return new Promise(t=>{const n=new o.Socket;n.once("connect",()=>{r(n),t(!1)}),n.once("data",()=>{}),n.once("error",e=>{r(n),t("ECONNREFUSED"===e.code)}),n.connect(e,"127.0.0.1")})}},function(e,t){e.exports=require("net")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(35),s=n(13);function i(e){return""===e.name?`${e.host.hostName}:${e.remotePort}`:e.name}function a(e){return`${""===e.name?"":`${e.host.hostName}:${e.remotePort} `}forwarded to localhost${e.localPort===e.remotePort?"":`:${e.localPort}`}`}t.tunnelLabel=i,t.tunnelDescription=a;class c{constructor(e){this.tunnel=e}get label(){return i(this.tunnel)}get description(){return a(this.tunnel)}get localPort(){return this.tunnel.localPort}closeTunnel(){this.tunnel.close()}get remoteAddress(){return""===this.tunnel.name?`${this.tunnel.host.hostName}:${this.tunnel.remotePort}`:`${this.tunnel.name} (${this.tunnel.host.hostName}:${this.tunnel.remotePort})`}}class l{constructor(){this.label="Create New Forward...",this.alwaysShow=!0}}async function u(e,t,n,i){const a=await r.askForRemotePort(e,t,i);if(null===a)return;const c=await r.askForForwarderName(t,a,i);return null!==c?o.window.withProgress({location:o.ProgressLocation.Notification,title:`Setting up port forwarding from ${t.hostName}`,cancellable:!1},async e=>{let r;try{r=await s.createTunnel({host:t,remotePort:a,name:c,internal:!1,progress:e,logger:i})}catch(e){return void o.window.showErrorMessage(e.message)}const l=`localhost:${r}`;if(n){const e="Copy Address",n="Open in Browser";o.window.showInformationMessage(`${t.hostName}:${a} is now available as ${l}`,e,n).then(t=>{t===e?o.env.clipboard.writeText(l):t===n&&o.env.openExternal(o.Uri.parse(`http://${l}`))})}return l}):void 0}t.getTunnelAddress=async function(e,t,n){const r=await async function(e){return new Promise((e,t)=>{const n=s.getActiveTunnels();if(0===n.length)return void e({type:"command",value:"create"});let r=n.map(e=>new c(e));const i=new l;r.push(i);const a=o.window.createQuickPick();a.items=r,a.title="Copy Local Forwarding Address or Create New Forward";let u=!1;a.onDidAccept(async()=>{u=!0,a.busy=!0;const t=a.selectedItems[0];let n;n=t===i?{type:"command",value:"create"}:{type:"address",value:`localhost:${t.localPort}`},a.busy=!1,a.hide(),a.dispose(),e(n)}),a.onDidHide(()=>{u||e(null)}),a.show()})}();return r&&"address"===r.type?(o.env.clipboard.writeText(`${r.value}`),o.window.showInformationMessage(`"${r.value}" copied to clipboard`),r.value):r&&"command"===r.type&&"create"===r.value?await u(e,t,!0,n):void 0},t.openTunnel=u,t.closeTunnel=async function(e){return new Promise((e,t)=>{let n=s.getActiveTunnels().map(e=>new c(e));if(0===n.length)return o.window.showInformationMessage("No ports are currently forwarded"),void e(null);const r=o.window.createQuickPick();r.items=n,r.title="Select the port that should no longer be forwarded";let i=!1;r.onDidAccept(async()=>{i=!0,r.busy=!0;const t=r.selectedItems[0];t.closeTunnel(),o.window.showInformationMessage(`Port ${t.remoteAddress} is no longer forwarded`),r.busy=!1,r.hide(),r.dispose(),e(t.localPort)}),r.onDidHide(()=>{i||e(null)}),r.show()})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0);t.askForRemotePort=async function(e,t,n){let r=!1;return new Promise(async(n,s)=>{const i=o.window.createInputBox();i.title=`Enter the port on "${t.hostName}" that should be forwarded:`;const a=e.workspaceState.get("remote.SSH.tunnelPort");void 0!==a&&(i.value=a.toString()),i.show(),i.onDidChangeValue(e=>{i.validationMessage=function(e){if(""!==e){let t=parseInt(e);if(isNaN(t)||t<=0)return"Enter a valid port number";if(t<1024)return"Port must be >= 1024"}return""}(e)}),i.onDidAccept(()=>{if(!i.validationMessage){r=!0;const t=parseInt(i.value);e.workspaceState.update("remote.SSH.tunnelPort",t),i.hide(),i.dispose(),n(t)}}),i.onDidHide(()=>{r||n(null)})})},t.askForForwarderName=async function(e,t,n){let r=!1;return new Promise(async(n,s)=>{const i=o.window.createInputBox();i.title=`Name the port forward for "${e.hostName}:${t}" or leave empty`,i.value=function(e){switch(e){case 8e3:case 80:return"Browser";case 5901:return"VNC"}return""}(t),i.show(),i.onDidAccept(()=>{i.validationMessage||(r=!0,i.hide(),i.dispose(),n(i.value))}),i.onDidHide(()=>{r||n(null)})})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.nonFalsy=function(e){return e.filter(e=>!!e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(16);t.Logger=class{constructor(e){this.disposables=[],this.outputChannel=o.window.createOutputChannel(e),this.disposables.push(this.outputChannel),this.disposables.push(o.env.onDidChangeLogLevel(()=>this.logCurrentLogLevel()))}showLog(){return this.outputChannel.show()}info(e){this.log(e,o.LogLevel.Info)}trace(e){this.log(e,o.LogLevel.Trace)}debug(e){this.log(e,o.LogLevel.Debug)}error(e){this.log(e,o.LogLevel.Error)}logCurrentLogLevel(){this.info("Log Level: "+o.LogLevel[o.env.logLevel])}log(e,t){e=String(e),o.env.logLevel!==o.LogLevel.Trace&&(e=r.stripEscapeSequences(e)),this.outputChannel.appendLine(e)}dispose(){this.outputChannel.dispose()}}}]));
//# sourceMappingURL=extension.js.map